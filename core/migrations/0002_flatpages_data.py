# Generated by Django 4.0 on 2022-01-03 15:29

from django.db import migrations


FLATPAGES = [
	{
		'title': 'About',
		'url': '/about/',
		'content': '',
	},
]


def add_flatpage_data(apps, schema_editor):
	FlatPage = apps.get_model('flatpages', 'FlatPage')
	Site = apps.get_model('sites', 'Site')
	site_id = getattr('settings', 'SITE_ID', 1)

	try:
		if FlatPage.objects.exists:
			FlatPage.objects.get(
				url = FLATPAGES[0].get('url')
			)
		else:
			raise FlatPage.DoesNotExist
	except FlatPage.DoesNotExist:
		flatpage = FlatPage(
			title = FLATPAGES[0].get('title'),
			url = FLATPAGES[0].get('url'),
			content = FLATPAGES[0].get('content'),
		)
		flatpage.sites.add(
			Site.objects.get(pk=site_id)
		)
		flatpage.save()

def remove_flatpage_data(apps, schema_editor):
	FlatPage = apps.get_model('flatpages', 'FlatPage')
	site_id = getattr('settings', 'SITE_ID', 1)

	if FlatPage.objects.exists:
		flatpage = FlatPage.objects.get(
			url = FLATPAGES.get('url')
		)
		flatpages.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_sites_data'),
        ('flatpages', '0001_initial'),
    ]

    operations = [
		migrations.RunPython(
			add_flatpage_data,
			remove_flatpage_data,
		),
    ]
